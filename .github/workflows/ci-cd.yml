name: CI/CD Pipeline
on:
  workflow_dispatch:
    branches:
      - master
env:
  APP_NAME: poc-spring-boot-genai
  GKE_CLUSTER: sab-cluster-dev-01
  GKE_ZONE: us-central1
jobs:
  pipeline-job:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package -DskipTests=true
      - name: List Current Directory
        run: ls -ltr
      - name: Docker Image Build
        run: docker build . --file Dockerfile --tag us-central1-docker.pkg.dev/sab-dev-storage-453204/sab-dev-repo/${{ env.APP_NAME }}-image
      - name: GCloud SDK Setup
        uses: google-github-actions/setup-gcloud@v1
      - name: GCP GAR Project Login
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GAR_SERVICE_ACCOUNT_KEY }}
      - name: GAR Authentication
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: GAR Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: us-central1-docker.pkg.dev/sab-dev-storage-453204/sab-dev-repo/${{ env.APP_NAME }}-image
      - name: GCP GKE Project Login
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }}
      - name: GKE Authentication
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - name: Helm Version Check
        run: helm version
      - name: Helm Directory
        run: echo /home/runner/work/${{ env.APP_NAME }}-parent/${{ env.APP_NAME }}-parent/configuration/helm
      - name: Helm Init
        run: helm lint /home/runner/work/${{ env.APP_NAME }}-parent/${{ env.APP_NAME }}-parent/configuration/helm
      - name: Helm Dry Execution
        run: helm install --set configDir=env/GCP-Dev/app-config ${{ env.APP_NAME }}-helm --namespace ${{ env.APP_NAME }}-namespace /home/runner/work/${{ env.APP_NAME }}-parent/${{ env.APP_NAME }}-parent/configuration/helm --dry-run